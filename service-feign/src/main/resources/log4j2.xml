<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<Configuration status="WARN" monitorInterval="30">
    <!-- 变量配置 -->
    <Properties>
        <Property name="APP_NAME">service-feign</Property>
        <Property name="LOG_HOME">./logs</Property>
        <Property name="FILE_LOG_PATTERN">%d %-5level [%t] %c : %msg%n</Property>
        <!--在控制台下显示彩色日志-->
        <Property name="CONSOLE_LOG_PATTERN">%d %highlight{%5level}{FATAL=yellow, ERROR=red, WARN=red, INFO=blue,
            DEBUG=green, TRACE=white} %magenta{[%t]} %cyan{%c} : %msg%n
        </Property>
    </Properties>

    <!--先定义所有的appender-->
    <Appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${CONSOLE_LOG_PATTERN}" disableAnsi="false"/>
        </Console>

        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingRandomAccessFile name="RollingFileInfo" immediateFlush="false"
                                 fileName="${LOG_HOME}/${APP_NAME}_info.log"
                                 filePattern="${LOG_HOME}/$${date:yyyy-MM}/${APP_NAME}_info-%d{yyyy-MM-dd}-%i.log">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${FILE_LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingRandomAccessFile>

        <RollingRandomAccessFile name="RollingFileWarn" immediateFlush="false"
                                 fileName="${LOG_HOME}/${APP_NAME}_warn.log"
                                 filePattern="${LOG_HOME}/$${date:yyyy-MM}/${APP_NAME}_warn-%d{yyyy-MM-dd}-%i.log">
            <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${FILE_LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingRandomAccessFile>

        <RollingRandomAccessFile name="RollingFileError" immediateFlush="false"
                                 fileName="${LOG_HOME}/${APP_NAME}_error.log"
                                 filePattern="${LOG_HOME}/$${date:yyyy-MM}/${APP_NAME}_error-%d{yyyy-MM-dd}-%i.log">
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${FILE_LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
        </RollingRandomAccessFile>
    </Appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <Loggers>
        <!--过滤掉spring的一些无用的DEBUG信息-->
        <Logger name="org.springframework" level="INFO"/>

        <Root level="all">
            <Appender-ref ref="Console"/>
            <Appender-ref ref="RollingFileInfo"/>
            <Appender-ref ref="RollingFileWarn"/>
            <Appender-ref ref="RollingFileError"/>
        </Root>
    </Loggers>
</Configuration>